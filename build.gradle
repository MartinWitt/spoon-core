plugins {
	id 'application'
	id "io.quarkus" version "3.2.0.CR1"
	id "com.diffplug.spotless" version "6.25.0"
	id "org.kordamp.gradle.jandex" version "1.1.0"
	id "net.ltgt.errorprone" version "3.1.0"
	id("maven-publish")
	id 'org.checkerframework' version '0.6.28'
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
	implementation 'fr.inria.gforge.spoon:spoon-core:10.2.0'
	implementation 'org.apache.maven:maven-embedder:3.8.7'
	implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '6.4.0.202211300538-r'
	implementation group: 'io.quarkus.arc', name: 'arc', version: '3.2.0.CR1'
	implementation 'io.quarkiverse.githubapi:quarkus-github-api:1.314.1'
	implementation(enforcedPlatform('io.quarkus:quarkus-bom:3.2.0.CR1'))
	implementation 'io.quarkiverse.githubaction:quarkus-github-action:2.0.0.Alpha1'
	testImplementation 'io.quarkus:quarkus-junit5'
	implementation("org.jboss.logmanager:log4j2-jboss-logmanager")

	// nullaway
	annotationProcessor "com.uber.nullaway:nullaway:+"
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
	implementation 'com.google.errorprone:error_prone_annotations:2.20.0'
	errorprone "com.google.errorprone:error_prone_core:2.20.0"
	implementation group: 'org.checkerframework', name: 'checker-qual', version: '3.35.0'
}

tasks.withType(JavaCompile).configureEach {
	options.errorprone.disableAllChecks = true
	options.errorprone.disableWarningsInGeneratedCode = true
	options.errorprone.enabled = true
	options.errorprone.allDisabledChecksAsWarnings = false // change it to true to enable
	options.errorprone.enable("Var")
	if (!name.toLowerCase().contains("test")) {
		options.errorprone {
			check("NullAway")
			option("NullAway:AnnotatedPackages", "io.github")
		}
	}
}


tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
}
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target "*.md", '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}

	groovyGradle {
		target '*.gradle' // default target of groovyGradle
		greclipse()
	}
	java {
		palantirJavaFormat()
	}
}
publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/MartinWitt/spoon-core")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			groupId = 'io.github.martinwitt'
			artifactId = 'spoon-rebuilder'
			version = '0.0.2'
			from(components.java)
		}
	}
}
tasks.withType(GenerateModuleMetadata).configureEach {
	// The value 'enforced-platform' is provided in the validation
	// error message you got
	suppressedValidationErrors.add('enforced-platform')
}
checkerFramework {
	checkers = [
		'org.checkerframework.checker.nullness.NullnessChecker',
		'org.checkerframework.checker.units.UnitsChecker'
	]
}