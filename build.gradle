plugins {
	id 'application'
	id "io.quarkus" version "2.15.1.Final"
	id "com.diffplug.spotless" version "6.12.0"
	id "org.kordamp.gradle.jandex" version "1.0.0"
	id("maven-publish")
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

	implementation 'fr.inria.gforge.spoon:spoon-core:10.2.0-beta-11'
	implementation 'org.apache.maven:maven-embedder:3.8.6'
	implementation 'org.eclipse.jgit:org.eclipse.jgit:6.2.0.202206071550-r'
	implementation 'org.eclipse.jgit:org.eclipse.jgit:6.2.0.202206071550-r'
	implementation group: 'io.quarkus.arc', name: 'arc', version: '2.15.1.Final'
	implementation 'io.quarkiverse.githubapi:quarkus-github-api:1.313.1'
	implementation(enforcedPlatform('io.quarkus:quarkus-bom:2.15.1.Final'))
	implementation 'io.quarkiverse.githubaction:quarkus-github-action:0.9.2'
	implementation 'io.quarkus:quarkus-junit5'
}

application {
	// Define the main class for the application.
	mainClass = 'io.github.martinwitt.spoonrebuilder.App'
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
}
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(16)
	}
}
spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target "*.md", '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}

	groovyGradle {
		target '*.gradle' // default target of groovyGradle
		greclipse()
	}
	java {
		palantirJavaFormat()
	}
}
publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			from(components.java)
		}
	}
}